{"version":3,"sources":["components/Graph.js","components/ScheduleItem.js","components/Schedules.js","lib/kiln.js","components/Controls.js","components/App.js","serviceWorker.js","index.js"],"names":["Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initChart","data","labels","chart","Chart","refs","ctx","type","datasets","fill","borderColor","backgroundColor","options","animation","duration","legend","display","title","text","fontSize","fontColor","responsive","tooltips","mode","intersect","displayColors","hover","scales","yAxes","ticks","beginAtZero","slice","reverse","map","temp","index","concat","update","react_default","a","createElement","className","ref","Component","ScheduleItem","schedule","name","ramps","ramp","key","rate","target","hold","Schedules","state","schedules","components_ScheduleItem","Kiln","url","arguments","length","undefined","getPackage","fetch","startFiring","headers","Content-Type","method","body","JSON","stringify","stopFiring","getSchedules","kiln","Controls","scheduleID","waiting","changeSelection","event","value","schedulePlaceholder","forEach","id","setState","alert","then","json","res","console","log","message","catch","error","keys","currentSchedule","isFiring","onChange","disabled","onClick","refreshPage","window","location","reload","objectToArray","object","App","temperatureLog","updatePackage","updateSchedules","array","setInterval","_this2","Fragment","temperature","Link","to","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","Route","exact","path","render","components_Graph","components_Schedules","components_Controls","Boolean","hostname","match","ReactDOM","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b93b899e.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport Chart from \"chart.js\"\n\nclass Graph extends Component{\n    constructor(props){\n        super(props);\n        this.initChart = (data, labels)=>{\n            this.chart = new Chart(this.refs.ctx, {\n                type: 'line',\n                data: {\n                    labels: labels,\n                    datasets: [{\n                        data: data,\n                        fill: true,\n                        borderColor: \"#0c0c0c\",\n                        backgroundColor: \"#0001\"\n                    }]\n                },\n                options: {\n                    animation: {\n                        duration: 0\n                    },\n                    legend: {\n                        display: false\n                    },\n                    title: {\n                        display: true,\n                        text: \"Graph\",\n                        fontSize: 16,\n                        fontColor: \"#f0eeea\"\n                    },\n                    responsive: true,\n                    tooltips: {\n                        mode: \"index\",\n                        intersect: false,\n                        displayColors: false\n                    },\n                    hover: {\n                        mode: \"nearest\",\n                        intersect: true\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: false\n                            }\n                        }]\n                    }\n                }\n            });\n        }\n    }\n\n    componentDidMount(){\n        let data = this.props.data.slice().reverse()\n        let labels = data.map((temp, index)=>{\n            return `${((index*1)+1)}m`\n        }).reverse()\n        this.initChart(data, labels)\n    }\n    componentDidUpdate(){\n        let data = this.props.data.slice().reverse()\n        let labels = data.map((temp, index)=>{\n            return `${(index+1)}m`\n        }).reverse()\n\n        this.chart.data.labels = labels;\n        this.chart.data.datasets[0].data = data\n        this.chart.update();\n    }\n    render(){\n        return (\n            <div className=\"graph-container\">\n                <canvas ref=\"ctx\" className=\"graph-canvas\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Graph","import React from \"react\"\n\nlet ScheduleItem = (props) => (\n    <div className=\"schedule-item\">\n        <p>{props.schedule.name}</p>\n        <table>\n            <tbody>\n                <tr>\n                    <th>Ramp</th>\n                    <th>Rate</th>\n                    <th>Target</th>\n                    <th>Hold</th>\n                </tr>\n                {props.schedule.ramps.map((ramp, index)=>\n                    (<tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{ramp.rate}</td>\n                        <td>{ramp.target}</td>\n                        <td>{ramp.hold}</td>\n                    </tr>)\n                )}\n            </tbody>\n\n        </table>\n    </div>\n)\n\nexport default ScheduleItem","import React, { Component } from \"react\"\nimport ScheduleItem from \"./ScheduleItem\"\n\nclass Schedules extends Component{\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n\n    render(){\n        return (\n            <div className=\"schedules-container\">\n\n                {this.props.schedules.map((schedule, index)=>{\n                    return <ScheduleItem schedule={schedule} key={index}/>\n                })}\n\n            </div>\n        )\n    }\n}\n\nexport default Schedules","\n\nclass Kiln{\n\n    constructor(url = \"http://localhost:2222/api\"){\n\n        this.url = url\n        this.getPackage = ()=>{\n            return fetch(`${this.url}/kiln/get-package`)\n        }\n        this.startFiring = (schedule)=>{\n            return fetch(`${this.url}/kiln/start-firing`, {\n                headers: {\"Content-Type\": \"application/json\"},\n                method: \"post\",\n                body: JSON.stringify({schedule: schedule})\n            })\n        }\n        this.stopFiring = ()=>{\n            return fetch(`${this.url}/kiln/stop-firing`)\n        }\n        this.getSchedules = ()=>{\n            return fetch(`${this.url}/get-schedules`)\n        }\n    }\n\n}\n\nexport default Kiln","import React, { Component } from \"react\";\nimport ScheduleItem from \"./ScheduleItem\";\n\nimport Kiln from \"../lib/kiln\"\nlet kiln = new Kiln()\n\nclass Controls extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            scheduleID: 0,\n            schedule: null,\n            waiting: false\n        }\n\n        this.changeSelection = (event) => {\n            let value = event.target.value\n            let schedulePlaceholder = null\n            this.props.state.schedules.forEach((schedule, index)=>{\n                if (schedule.id === value){\n                    schedulePlaceholder = schedule\n                }\n            })\n            this.setState({scheduleID: value, schedule: schedulePlaceholder })\n        }\n\n        this.startFiring = () =>{\n            this.setState({waiting: true})\n            if (!this.state.schedule) {\n                alert(\"Please select a schedule\")\n                this.setState({waiting: false})\n                return\n            }\n            kiln.startFiring(this.state.schedule)\n            .then(data=>data.json())\n            .then((res)=>{\n                console.log(res)\n                alert(res.message)\n            })\n            .catch((error)=>{\n                console.log(error)\n                alert(error.message)\n            })\n            .then(()=>{\n                this.setState({waiting: false})\n            })\n        }\n        this.stopFiring = () =>{\n            this.setState({waiting: true})\n            kiln.stopFiring()\n            .then(data=>data.json())\n            .then((res)=>{\n                console.log(res)\n                alert(res.message)\n            })\n            .catch((error)=>{\n                console.log(error)\n                alert(error.message)\n            })\n            .then(()=>{\n                this.setState({waiting: false})\n            })\n        }\n    }\n\n    componentDidMount(){\n        if (Object.keys(this.props.state.kiln.currentSchedule).length > 0){\n            this.setState({scheduleID: this.props.state.kiln.currentSchedule.id, schedule: this.props.state.kiln.currentSchedule})\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"controls-container\">\n                <div className=\"controls\">\n                    <p>Kiln is currently {this.props.state.kiln.isFiring ? \"on\" : \"off\"}</p>\n                    <br/>\n                    <select value={this.state.scheduleID} onChange={this.changeSelection}>\n                        <option value={0} disabled>Select Schedule</option>\n                        {this.props.state.schedules.map(((schedule, index)=>\n                            <option value={schedule.id} key={index}>{schedule.name}</option>\n                        ))}\n                    </select>\n                    <div className=\"start-stop-container\">\n                        <button disabled={this.state.waiting} className=\"start btn\" onClick={this.startFiring}>Start</button>\n                        <button disabled={this.state.waiting} className=\"stop btn\" onClick={this.stopFiring}>Stop</button>\n                    </div>\n                </div>\n                <div className=\"preview\">\n                    {this.state.schedule && <ScheduleItem schedule={this.state.schedule}/>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Controls","import React, { Component } from 'react';\nimport {Route, Link} from \"react-router-dom\"\nimport Graph from \"./Graph\"\nimport Schedules from \"./Schedules\"\nimport Controls from \"./Controls\"\n\n\nimport Kiln from '../lib/kiln';\nlet kiln = new Kiln()\n\nlet refreshPage = () =>{\n  window.location.reload();\n}\n\nlet objectToArray = (object)=>{\n  return Object.keys(object).map(key=>{\n      return object[key]\n  })\n}\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      kiln: {\n        temperatureLog: [],\n        currentSchedule: {}\n      },\n      schedules: []\n    }\n\n    this.updatePackage = () => {\n\n      kiln.getPackage()\n        .then(data=>data.json())\n        .then(object => {\n          this.setState({kiln: object})\n        })\n        .catch(console.log)\n    }\n\n    this.updateSchedules = () => {\n\n      kiln.getSchedules()\n        .then(data=>data.json())\n        .then(object => {\n\n          let array = objectToArray(object)\n          this.setState({schedules: array})\n        })\n        .catch(console.log)\n    }\n  }\n\n  componentDidMount(){\n    this.updatePackage()\n    this.updateSchedules()\n\n    setInterval(this.updatePackage, 10000)\n  }\n\n  render() {\n    return <>\n      <div className=\"menu\">\n        <div className=\"temperature\">{this.state.kiln.temperature}ºF</div>\n        <Link className=\"graph\" to=\"/\">Graph</Link>\n        <Link className=\"schedules\" to=\"/schedules\">Schedules</Link>\n        <Link className=\"controls\" to=\"/controls\">Controls</Link>\n        <Link className=\"settings\" to=\"/settings\">Settings</Link>\n        <button onClick={refreshPage} className=\"refresh-button\"><svg aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"redo\" className=\"\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M500.333 0h-47.411c-6.853 0-12.314 5.729-11.986 12.574l3.966 82.759C399.416 41.899 331.672 8 256.001 8 119.34 8 7.899 119.526 8 256.187 8.101 393.068 119.096 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-33.971-33.971c-4.466-4.466-11.64-4.717-16.38-.543C341.308 415.448 300.606 432 256 432c-97.267 0-176-78.716-176-176 0-97.267 78.716-176 176-176 60.892 0 114.506 30.858 146.099 77.8l-101.525-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12z\"></path></svg></button>\n      </div>\n      <div className=\"body\">\n        <Route exact path=\"/\" render={()=>{\n          return (\n            <Graph data={this.state.kiln.temperatureLog} />\n          )\n        }} />\n\n        <Route exact path=\"/schedules\" render={()=>{\n          return (\n            <Schedules schedules={this.state.schedules}/>\n          )\n        }} />\n\n        <Route exact path=\"/controls\" render={()=>{\n          return (\n            <Controls state={this.state}/>\n          )\n        }} />\n\n        <Route exact path=\"/settings\" render={()=>{\n          return (\n            <div className=\"settings-container\">settings</div>\n          )\n        }} />\n\n      </div>\n    </>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport './scss/app.scss';\nimport App from './components/App';\nimport { BrowserRouter } from \"react-router-dom\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}